@model IEnumerable<Application.ViewModel.ProductViewModelData>

<!-- Button to open modal -->
<button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addProductModal">
    Add Product
</button>
<!-- Table -->

<table class="table table-bordered" id="productsTable">
    <thead>
        <tr>
            <th>Price</th>
            <th>Description</th>
            <th>IsActive</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>@item.Price</td>
            <td>@item.Descriptions</td>
            <td>@item.IsActive</td>
                <td>
                    @if (item.IsOwner)
                    {
                        <button class="btn btn-sm btn-primary edit-btn" data-id="@item.Id">
                            <i class="bi bi-pencil"></i> Edit
                        </button>
                        <button class="btn btn-sm btn-danger delete-btn" data-id="@item.Id">
                            <i class="bi bi-trash"></i> Delete
                        </button>
                    }
                    else
                    {
                        <span class="text-muted">Not Allowed</span>
                    }
                </td>

        </tr>
    }
    </tbody>
</table>


<!-- Modal -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="addProductModalLabel">Add Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <form id="addProductForm">

                    <div class="mb-3">
                        <label for="Price" class="form-label">Price</label>
                        <input type="number" class="form-control" id="Price" name="Price" required />
                    </div>

                    <div class="mb-3">
                        <label for="Descriptions" class="form-label">Descriptions</label>
                        <textarea class="form-control" id="Descriptions" name="Descriptions" required></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="IsActive" class="form-label">Is Active</label>
                        <select class="form-control" id="IsActive" name="IsActive">
                            <option value="true">Yes</option>
                            <option value="false">No</option>
                        </select>
                    </div>

                    <button type="submit" class="btn btn-success">Save</button>
                </form>
            </div>

        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>

            <div class="modal-body">
                <form id="editProductForm">
                    <input type="hidden" id="EditId" />

                    <div class="mb-3">
                        <label for="EditPrice" class="form-label">Price</label>
                        <input type="number" class="form-control" id="EditPrice" required />
                    </div>

                    <div class="mb-3">
                        <label for="EditDescriptions" class="form-label">Descriptions</label>
                        <textarea class="form-control" id="EditDescriptions" required></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="EditIsActive" class="form-label">Is Active</label>
                        <select class="form-control" id="EditIsActive">
                            <option value="true">Yes</option>
                            <option value="false">No</option>
                        </select>
                    </div>

                    <button type="submit" class="btn btn-success">Update</button>
                </form>
            </div>

        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", () => {

            // CREATE product (already working)
            document.getElementById("addProductForm").addEventListener("submit", function (e) {
                e.preventDefault();

                const productData = {
                    Price: document.getElementById("Price").value,
                    Descriptions: document.getElementById("Descriptions").value,
                    IsActive: document.getElementById("IsActive").value === "true"
                };

                fetch('@Url.Action("Create", "ProductUI")', {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(productData)
                })
                .then(r => r.json())
                .then(() => window.location.reload())
                .catch(() => alert("Error saving product."));
            });

            // EDIT button click → open modal with product data
            document.querySelectorAll(".edit-btn").forEach(btn => {
                btn.addEventListener("click", function () {
                    const id = this.dataset.id;

                    fetch(`@Url.Action("GetById", "ProductUI")/${id}`)
                    .then(r => r.json())
                    .then(product => {
                        document.getElementById("EditId").value = product.id;
                        document.getElementById("EditPrice").value = product.price;
                        document.getElementById("EditDescriptions").value = product.descriptions;
                        document.getElementById("EditIsActive").value = product.isActive;

                        const modal = new bootstrap.Modal(document.getElementById("editProductModal"));
                        modal.show();
                    });
                });
            });

            // SUBMIT edit form
            document.getElementById("editProductForm").addEventListener("submit", function (e) {
                e.preventDefault();

                const productData = {
                    Id: document.getElementById("EditId").value,
                    Price: document.getElementById("EditPrice").value,
                    Descriptions: document.getElementById("EditDescriptions").value,
                    IsActive: document.getElementById("EditIsActive").value === "true"
                };

                fetch('@Url.Action("Edit", "ProductUI")', {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(productData)
                })
                .then(r => {
                    if (!r.ok) throw new Error();
                    return r.json();
                })
                .then(() => window.location.reload())
                .catch(() => alert("Error updating product."));
            });

            // DELETE button click
            document.querySelectorAll(".delete-btn").forEach(btn => {
                btn.addEventListener("click", function () {
                    if (!confirm("Are you sure you want to delete this product?")) return;

                    const id = this.dataset.id;

                    fetch(`@Url.Action("Delete", "ProductUI")/${id}`, {
                        method: "GET"
                    })
                    .then(r => {
                        if (!r.ok) throw new Error();
                        window.location.reload();
                    })
                    .catch(() => alert("Error deleting product."));
                });
            });

        });
    </script>
}

