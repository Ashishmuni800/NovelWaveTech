@model IEnumerable<Application.ViewModel.TransactionViewModelDataTable>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Glowing Animated Search Bar</title>
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link href="~/css/search.css" rel="stylesheet" />
</head>
<body>
    
    <form method="get" style="position: relative; width: 300px;">
    <div class="col-form-label-lg">
        <label>Account Statement</label>
    </div>

    <div class="search-box" style="position: relative;">
        <!-- Search Button on the LEFT -->
            <button class="icon search-btn" id="searchBtn" type="submit">
                <i class="fas fa-search"></i>
            </button>

        <!-- Input field with left and right padding -->
        <input type="text" name="accountNumber" id="accountInput" maxlength="11" placeholder="Search..."
               value="@Context.Request.Query["accountNumber"]"
               style="padding-left: 40px; padding-right: 50px; width: 100%;">

        <!-- PDF Download Icon on the RIGHT -->
        <a id="pdfDownloadLink"
           href="#"
           target="_blank"
           style="position: absolute; right: 20px; top: 50%; transform: translateY(-50%); text-decoration: none; color: #f00;"
           onclick="return updatePdfLink();">
            <i class="fas fa-file-pdf"></i>
        </a>
    </div>
</form>


    @if (Model != null && Model.Any())
    {
        <div class="table-responsive">
            <table class="table table-hover align-middle mt-3">
                <thead class="table-light">
                    <tr>
                        <th>Date Transaction</th>
                        <th>Amount</th>
                        <th>Type</th>
                        <th>Notes</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.TransactionDate</td>
                            <td>@item.Amount.ToString("C", new System.Globalization.CultureInfo("en-IN"))</td>
                            @if (item.Type == "Debit")
                            {
                                <td style="color: red !important;font-weight: bold;">@item.Type</td>
                            }
                            else
                            {
                                <td style="color: green !important;font-weight: bold;">@item.Type</td>
                            }
                            <td>@item.Notes</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p>Account statement not found</p>
    }
    <script>
        // Add ripple effect to all icon buttons
        document.querySelectorAll('.icon').forEach(button => {
          button.addEventListener('click', function(e) {
            const ripple = document.createElement('span');
            ripple.classList.add('ripple');
            this.appendChild(ripple);

            const rect = this.getBoundingClientRect();
            ripple.style.left = (e.clientX - rect.left - ripple.offsetWidth / 2) + 'px';
            ripple.style.top = (e.clientY - rect.top - ripple.offsetHeight / 2) + 'px';

            setTimeout(() => {
              ripple.remove();
            }, 600);
          });
        });

              document.getElementById("accountInput").addEventListener("input", function () {
          if (this.value.length === 11) {
            document.getElementById("searchBtn").click();
          }
        });

        function updatePdfLink() {
            const accountNumber = document.getElementById("accountInput").value.trim();
            if (!accountNumber) {
                alert("Please enter an account number first.");
                return false;
            }

            const url = `/Transactions/DownloadPdf?accountNumber=${encodeURIComponent(accountNumber)}`;
            window.open(url, '_blank');
            return false; // prevent default
        }

    </script>
</body>
</html>