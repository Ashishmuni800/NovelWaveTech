@{
    ViewData["Title"] = "Chat";
}

<style>
    /* Reset some defaults */
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: #f5f7fa;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }

    .chat-container {
        background: #fff;
        width: 100%;
        max-width: 480px;
        border-radius: 12px;
        box-shadow: 0 8px 24px rgba(0,0,0,0.1);
        display: flex;
        flex-direction: column;
        overflow: hidden;
        height: 80vh;
    }

    /* Logo/Header */
    .chat-header {
        background: #4a90e2;
        color: white;
        padding: 1rem 1.5rem;
        font-weight: 700;
        font-size: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }

        .chat-header img {
            height: 32px;
            width: 32px;
            object-fit: contain;
        }

    /* Messages list */
    #messagesList {
        flex-grow: 1;
        padding: 1rem 1.5rem;
        overflow-y: auto;
        list-style: none;
        margin: 0;
        background: #e9eff7;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

        #messagesList li {
            max-width: 75%;
            padding: 0.5rem 1rem;
            border-radius: 16px;
            font-size: 0.95rem;
            word-wrap: break-word;
        }

            /* Differentiate user messages by name */
            #messagesList li.user-message {
                background: #4a90e2;
                color: white;
                align-self: flex-end;
                border-bottom-right-radius: 4px;
            }

            #messagesList li.other-message {
                background: #fff;
                color: #333;
                align-self: flex-start;
                border-bottom-left-radius: 4px;
                box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            }

    /* Inputs area */
    .chat-inputs {
        display: flex;
        gap: 0.75rem;
        padding: 1rem 1.5rem;
        background: #f0f3f7;
        border-top: 1px solid #ddd;
        align-items: center;
    }

        .chat-inputs input[type="text"] {
            flex-grow: 1;
            padding: 0.6rem 2.5rem 0.6rem 2.5rem;
            border-radius: 24px;
            border: 1.5px solid #ccc;
            font-size: 1rem;
            outline-offset: 2px;
            transition: border-color 0.3s ease;
        }

            .chat-inputs input[type="text"]:focus {
                border-color: #4a90e2;
                box-shadow: 0 0 5px #4a90e2aa;
            }

    /* User input with icon */
    .input-wrapper {
        position: relative;
        flex-basis: 120px;
    }

        .input-wrapper.user input {
            padding-left: 2rem;
        }

        .input-wrapper.user .icon {
            position: absolute;
            left: 8px;
            top: 50%;
            transform: translateY(-50%);
            color: #999;
            font-size: 1rem;
        }

        /* Message input with icon */
        .input-wrapper.message {
            flex-grow: 1;
            position: relative;
        }

            .input-wrapper.message input {
                padding-left: 2.5rem;
            }

            .input-wrapper.message .icon {
                position: absolute;
                left: 10px;
                top: 50%;
                transform: translateY(-50%);
                color: #999;
                font-size: 1.2rem;
            }

    /* Send button */
    #sendButton {
        background: #4a90e2;
        border: none;
        color: white;
        padding: 0.6rem 1.3rem;
        border-radius: 24px;
        font-size: 1.1rem;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: background-color 0.3s ease;
    }

        #sendButton:hover {
            background: #357abd;
        }

        #sendButton:active {
            background: #2c5fa7;
        }

        #sendButton .fa-paper-plane {
            margin-left: 0.25rem;
            font-size: 1.2rem;
        }
</style>

<div class="chat-container">
    <header class="chat-header">
        <img src="https://cdn-icons-png.flaticon.com/512/1384/1384053.png" alt="Chat Logo" />
        Real-time Chat
    </header>

    <ul id="messagesList"></ul>

    <form class="chat-inputs" onsubmit="return false;">
        <div class="input-wrapper user">
            <i class="fa fa-user icon" aria-hidden="true"></i>
            <input type="text" id="userInput" placeholder="Your name" autocomplete="off" />
        </div>
        <div class="input-wrapper message">
            <i class="fa fa-comment icon" aria-hidden="true"></i>
            <input type="text" id="messageInput" placeholder="Write a message..." autocomplete="off" />
        </div>
        <button id="sendButton" aria-label="Send message">
            Send <i class="fa fa-paper-plane" aria-hidden="true"></i>
        </button>
    </form>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>

    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        connection.on("ReceiveMessage", function (user, message) {
            const li = document.createElement("li");
            li.textContent = `${user}: ${message}`;
            // Differentiate current user messages by style
            const currentUser = document.getElementById("userInput").value.trim();
            if(user === currentUser && currentUser !== "") {
                li.classList.add("user-message");
            } else {
                li.classList.add("other-message");
            }
            const messagesList = document.getElementById("messagesList");
            messagesList.appendChild(li);
            messagesList.scrollTop = messagesList.scrollHeight;
        });

        connection.start().catch(function (err) {
            console.error(err.toString());
        });

        document.getElementById("sendButton").addEventListener("click", function (event) {
            event.preventDefault();
            const user = document.getElementById("userInput").value.trim();
            const message = document.getElementById("messageInput").value.trim();

            if (user && message) {
                connection.invoke("SendMessage", user, message).catch(function (err) {
                    console.error(err.toString());
                });
                document.getElementById("messageInput").value = '';
                document.getElementById("messageInput").focus();
            }
        });

        // Optional: send message on Enter key in messageInput
        document.getElementById("messageInput").addEventListener("keyup", function(e) {
            if(e.key === "Enter") {
                document.getElementById("sendButton").click();
            }
        });
    </script>
}
