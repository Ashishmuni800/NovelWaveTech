@{
    ViewData["Title"] = "Users";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Users Management</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" crossorigin="anonymous" />
    <link rel="stylesheet" href="~/css/user.css" asp-append-version="true" />
</head>
<body>
    <div class="container mt-6">
        <h2>Users Management</h2>
        <table>
            <thead>
                <tr>
                    <th class="sortable">Name</th>
                    <th class="sortable">Username</th>
                    <th class="sortable">Email</th>
                    <th class="sortable">Phone Number</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="list"></tbody>
        </table>
        <div id="loading">Loading more…</div>
    </div>

    <div id="editModal">
        <div id="editModalContent">
            <h3>Edit User</h3>
            <input type="text" id="editName" placeholder="Name" />
            <input type="text" id="editUsername" placeholder="Username" />
            <input type="email" id="editEmail" placeholder="Email" />
            <input type="text" id="editPhoneNumber" placeholder="Phone Number" />
            <button onclick="saveEdit()">Save</button>
            <button onclick="closeModal()">Cancel</button>
        </div>
    </div>

    <div id="alert" class="alert"></div>

    <script>
        const listEl = document.getElementById('list');
        const loadingEl = document.getElementById('loading');
        const alertBox = document.getElementById('alert');
        const editModal = document.getElementById('editModal');
        const editNameInput = document.getElementById('editName');
        const editUsernameInput = document.getElementById('editUsername');
        const editEmailInput = document.getElementById('editEmail');
        const editPhoneNumberInput = document.getElementById('editPhoneNumber');

        let allUsers = [];
        let currentEditId = null;

        function showAlert(message, type = 'success') {
            alertBox.textContent = message;
            alertBox.className = `alert ${type}`;
            alertBox.style.display = 'block';
            setTimeout(() => alertBox.style.display = 'none', 3000);
        }

        function renderUsers(users) {
            listEl.innerHTML = '';
            users.forEach(u => {
                const row = document.createElement('tr');
                row.id = `row-${u.id}`;
                row.innerHTML = `
                    <td data-label="Name">${u.name}</td>
                    <td data-label="Username">${u.userName}</td>
                    <td data-label="Email">${u.email}</td>
                    <td data-label="Phone">${u.phoneNumber}</td>
                    <td data-label="Actions" class="actions">
                        <span class="action-btn edit-btn" title="Edit"
                            onclick="editUser('${u.id}', '${u.name}', '${u.userName}', '${u.email}', '${u.phoneNumber}')">
                            <i class="fas fa-edit"></i>
                        </span>
                    </td>
                `;
                listEl.appendChild(row);
            });
        }

        async function loadMore() {
            try {
                const resp = await fetch(`/Home/GetUsers`, { method: 'GET' });
                if (!resp.ok) throw new Error('Failed to fetch');
                const data = await resp.json();
                allUsers = allUsers.concat(data);
                renderUsers(allUsers);
            } catch (err) {
                console.error(err);
                showAlert('Error fetching users', 'error');
            } finally {
                loadingEl.style.display = 'none';
            }
        }

        function editUser(id, name, username, email, phoneNumber) {
            currentEditId = id;
            editNameInput.value = name;
            editUsernameInput.value = username;
            editEmailInput.value = email;
            editPhoneNumberInput.value = phoneNumber;
            editModal.style.display = 'flex';
        }

        function closeModal() {
            editModal.style.display = 'none';
        }

        async function saveEdit() {
            const name = editNameInput.value.trim();
            const username = editUsernameInput.value.trim();
            const email = editEmailInput.value.trim();
            const phoneNumber = editPhoneNumberInput.value.trim();

            if (!username || !email || !name || !phoneNumber) {
                showAlert('All fields are required', 'error');
                return;
            }

            try {
                const resp = await fetch(`/Home/UpdatePost/${currentEditId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ id: currentEditId, name, userName: username, email, phoneNumber })
                });

                if (!resp.ok) throw new Error('Failed to edit user');

                const idx = allUsers.findIndex(u => u.id === currentEditId);
                if (idx !== -1) {
                    allUsers[idx] = { ...allUsers[idx], name, userName: username, email, phoneNumber };
                }

                renderUsers(allUsers);
                closeModal();
                showAlert('User updated successfully');
            } catch (err) {
                console.error(err);
                showAlert('Edit failed', 'error');
            }
        }

        window.addEventListener('load', () => {
            fetch(`/Home/GetToken`, { method: 'GET' })
                .then(r => { if (!r.ok) window.location.href = "/Home/Login"; })
                .catch(() => window.location.href = "/Home/Login");
            loadMore();
        });
    </script>
</body>
</html>
